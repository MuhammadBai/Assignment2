#!/bin/bash
# This script automates the process of creating a new user with specified options

# Check if the script is running as root
root_check() {
    if [[ $EUID -ne 0 ]]; then
        echo "Error: This script must be run as root."
        exit 1
    fi
}

# Show script usage information
usage(){
    echo "Usage: $0 -u <username> [-s <shell>] [-g <additional_groups>]"
    echo "  -u   Specify the username for the new user (required)"
    echo "  -s   Specify the shell for the new user (optional, default: /bin/bash)"
    echo "  -g   Specify additional groups (optional, comma-separated, no spaces)"
}

# Initialize default values
username=""
shell="/bin/bash"  # Default shell
groups=""

# Parse command-line options
while getopts "u:s:g:" opt; do
    case "$opt" in
        u) username="$OPTARG" ;;   # Set the username
        s) shell="$OPTARG" ;;      # Set the shell
        g) groups="$OPTARG" ;;     # Set additional groups
        *) show_usage              # Show usage on invalid option
           exit 1 ;;
    esac
done

# Check if username is provided
if [[ -z "$username" ]]; then
    echo "Error: Username is required."
    show_usage
    exit 1
fi

# Function to add the user with specified settings
creates_user() {
    echo "Creating user '$username' with shell '$shell' and groups '$groups'..."

    # Add user with specified shell and groups, and check for success
    if useradd -m -s "$shell" -G "$groups" "$username"; then
        echo "User '$username' created successfully."

        # Prompt for password and apply it
        echo "Please enter a password for the new user:"
        passwd "$username"

        # Copy default files to the new user's home directory
        cp -r /etc/skel/. "/home/$username"
        chown -R "$username":"$username" "/home/$username"
        echo "Home directory and default files set up for '$username'."
    else
        echo "Error: Failed to create user '$username'."
        exit 1
    fi
}

# Run root check, then proceed to create user
root_check
creates_user

